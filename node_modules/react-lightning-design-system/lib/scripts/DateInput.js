'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _FormElement = require('./FormElement');

var _FormElement2 = _interopRequireDefault(_FormElement);

var _Input = require('./Input');

var _Input2 = _interopRequireDefault(_Input);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Datepicker = require('./Datepicker');

var _Datepicker2 = _interopRequireDefault(_Datepicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateInput = function (_React$Component) {
  (0, _inherits3.default)(DateInput, _React$Component);

  function DateInput(props) {
    (0, _classCallCheck3.default)(this, DateInput);

    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(DateInput).call(this, props));

    _this.state = { opened: props.defaultOpened || false };
    return _this;
  }

  (0, _createClass3.default)(DateInput, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.onValueChange && prevState.value !== this.state.value) {
        this.props.onValueChange(this.state.value, prevState.value);
      }
    }
  }, {
    key: 'onDateIconClick',
    value: function onDateIconClick() {
      var _this2 = this;

      setTimeout(function () {
        _this2.showDatepicker();
      }, 10);
    }
  }, {
    key: 'onInputKeyDown',
    value: function onInputKeyDown(e) {
      var _this3 = this;

      if (e.keyCode === 13) {
        // return key
        e.preventDefault();
        e.stopPropagation();
        this.setValueFromInput(e.target.value);
        if (this.props.onComplete) {
          setTimeout(function () {
            _this3.props.onComplete();
          }, 10);
        }
      } else if (e.keyCode === 40) {
        // down key
        this.showDatepicker();
        e.preventDefault();
        e.stopPropagation();
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: 'onInputChange',
    value: function onInputChange(e) {
      var inputValue = e.target.value;
      this.setState({ inputValue: inputValue });
      if (this.props.onChange) {
        this.props.onChange(e, inputValue);
      }
    }
  }, {
    key: 'onInputBlur',
    value: function onInputBlur(e) {
      var _this4 = this;

      this.setValueFromInput(e.target.value);
      setTimeout(function () {
        if (!_this4.isFocusedInComponent()) {
          if (_this4.props.onBlur) {
            _this4.props.onBlur();
          }
          if (_this4.props.onComplete) {
            _this4.props.onComplete();
          }
        }
      }, 10);
    }
  }, {
    key: 'onDatepickerSelect',
    value: function onDatepickerSelect(value) {
      var _this5 = this;

      this.setState({ value: value, inputValue: undefined });
      setTimeout(function () {
        _this5.setState({ opened: false });
        var inputEl = _reactDom2.default.findDOMNode(_this5.refs.input);
        if (inputEl) {
          inputEl.focus();
          inputEl.select();
        }
        if (_this5.props.onComplete) {
          _this5.props.onComplete();
        }
      }, 200);
    }
  }, {
    key: 'onDatepickerBlur',
    value: function onDatepickerBlur() {
      var _this6 = this;

      this.setState({ opened: false });
      setTimeout(function () {
        if (!_this6.isFocusedInComponent()) {
          if (_this6.props.onBlur) {
            _this6.props.onBlur();
          }
          if (_this6.props.onComplete) {
            _this6.props.onComplete();
          }
        }
      }, 10);
    }
  }, {
    key: 'onDatepickerClose',
    value: function onDatepickerClose() {
      this.setState({ opened: false });
      var inputEl = _reactDom2.default.findDOMNode(this.refs.input);
      if (inputEl) {
        inputEl.focus();
        inputEl.select();
      }
    }
  }, {
    key: 'setValueFromInput',
    value: function setValueFromInput(inputValue) {
      var value = this.state.value;
      if (!inputValue) {
        value = '';
      } else {
        value = (0, _moment2.default)(inputValue, this.props.dateFormat);
        if (value.isValid()) {
          value = value.format('YYYY-MM-DD');
        } else {
          value = '';
        }
      }
      this.setState({ value: value, inputValue: undefined });
    }
  }, {
    key: 'isFocusedInComponent',
    value: function isFocusedInComponent() {
      var rootEl = _reactDom2.default.findDOMNode(this);
      var targetEl = document.activeElement;
      while (targetEl && targetEl !== rootEl) {
        targetEl = targetEl.parentNode;
      }
      return !!targetEl;
    }
  }, {
    key: 'showDatepicker',
    value: function showDatepicker() {
      var value = this.state.value;
      if (typeof this.state.inputValue !== 'undefined') {
        value = (0, _moment2.default)(this.state.inputValue, this.props.dateFormat);
        if (value.isValid()) {
          value = value.format('YYYY-MM-DD');
        } else {
          value = this.state.value;
        }
      }
      this.setState({ opened: true, value: value });
    }
  }, {
    key: 'renderInput',
    value: function renderInput(_ref) {
      var inputValue = _ref.inputValue;
      var props = (0, _objectWithoutProperties3.default)(_ref, ['inputValue']);

      return _react2.default.createElement(
        'div',
        { className: 'slds-input-has-icon slds-input-has-icon--right' },
        _react2.default.createElement(_Input2.default, (0, _extends3.default)({ ref: 'input', value: inputValue }, props, {
          onKeyDown: this.onInputKeyDown.bind(this),
          onChange: this.onInputChange.bind(this),
          onBlur: this.onInputBlur.bind(this)
        })),
        _react2.default.createElement(_Icon2.default, { icon: 'event', className: 'slds-input__icon', style: { cursor: 'pointer' },
          onClick: this.onDateIconClick.bind(this)
        })
      );
    }
  }, {
    key: 'renderDropdown',
    value: function renderDropdown(dateValue) {
      var datepickerClassNames = (0, _classnames2.default)('slds-dropdown', 'slds-dropdown--left');
      return this.state.opened ? _react2.default.createElement(_Datepicker2.default, { className: datepickerClassNames, selectedDate: dateValue, autoFocus: true,
        onSelect: this.onDatepickerSelect.bind(this),
        onBlur: this.onDatepickerBlur.bind(this),
        onClose: this.onDatepickerClose.bind(this)
      }) : _react2.default.createElement('div', null);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
      var totalCols = _props.totalCols;
      var cols = _props.cols;
      var label = _props.label;
      var required = _props.required;
      var error = _props.error;
      var defaultValue = _props.defaultValue;
      var value = _props.value;
      var dateFormat = _props.dateFormat;
      var onChange = _props.onChange;
      var onKeyDown = _props.onKeyDown;
      var onBlur = _props.onBlur;
      var props = (0, _objectWithoutProperties3.default)(_props, ['totalCols', 'cols', 'label', 'required', 'error', 'defaultValue', 'value', 'dateFormat', 'onChange', 'onKeyDown', 'onBlur']);

      var dateValue = typeof value !== 'undefined' ? value : typeof this.state.value !== 'undefined' ? this.state.value : defaultValue;
      var mvalue = (0, _moment2.default)(dateValue, 'YYYY-MM-DD');
      var inputValue = typeof this.state.inputValue !== 'undefined' ? this.state.inputValue : typeof dateValue !== 'undefined' && mvalue.isValid() ? mvalue.format(dateFormat) : null;
      var dropdown = this.renderDropdown(dateValue);
      var formElemProps = { id: props.id, totalCols: totalCols, cols: cols, label: label, required: required, error: error, dropdown: dropdown };
      return _react2.default.createElement(
        _FormElement2.default,
        formElemProps,
        this.renderInput((0, _extends3.default)({ inputValue: inputValue }, props))
      );
    }
  }]);
  return DateInput;
}(_react2.default.Component);

exports.default = DateInput;


DateInput.propTypes = {
  className: _react.PropTypes.string,
  label: _react.PropTypes.string,
  value: _react.PropTypes.string,
  onKeyDown: _react.PropTypes.func,
  onBlur: _react.PropTypes.func,
  defaultValue: _react.PropTypes.string,
  defaultOpened: _react.PropTypes.bool,
  dateFormat: _react.PropTypes.string,
  totalCols: _react.PropTypes.number,
  cols: _react.PropTypes.number,
  required: _react.PropTypes.bool,
  error: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.shape({
    message: _react.PropTypes.string
  })]),
  onChange: _react.PropTypes.func,
  onValueChange: _react.PropTypes.func,
  onComplete: _react.PropTypes.func
};

DateInput.defaultProps = {
  dateFormat: 'L'
};

DateInput.isFormElement = true;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL0RhdGVJbnB1dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVNxQjs7O0FBQ25CLFdBRG1CLFNBQ25CLENBQVksS0FBWixFQUFtQjt3Q0FEQSxXQUNBOzs2RkFEQSxzQkFFWCxRQURXOztBQUVqQixVQUFLLEtBQUwsR0FBYSxFQUFFLFFBQVMsTUFBTSxhQUFOLElBQXVCLEtBQXZCLEVBQXhCLENBRmlCOztHQUFuQjs7NkJBRG1COzt1Q0FNQSxXQUFXLFdBQVc7QUFDdkMsVUFBSSxLQUFLLEtBQUwsQ0FBVyxhQUFYLElBQTRCLFVBQVUsS0FBVixLQUFvQixLQUFLLEtBQUwsQ0FBVyxLQUFYLEVBQWtCO0FBQ3BFLGFBQUssS0FBTCxDQUFXLGFBQVgsQ0FBeUIsS0FBSyxLQUFMLENBQVcsS0FBWCxFQUFrQixVQUFVLEtBQVYsQ0FBM0MsQ0FEb0U7T0FBdEU7Ozs7c0NBS2dCOzs7QUFDaEIsaUJBQVcsWUFBTTtBQUNmLGVBQUssY0FBTCxHQURlO09BQU4sRUFFUixFQUZILEVBRGdCOzs7O21DQU1ILEdBQUc7OztBQUNoQixVQUFJLEVBQUUsT0FBRixLQUFjLEVBQWQsRUFBa0I7O0FBQ3BCLFVBQUUsY0FBRixHQURvQjtBQUVwQixVQUFFLGVBQUYsR0FGb0I7QUFHcEIsYUFBSyxpQkFBTCxDQUF1QixFQUFFLE1BQUYsQ0FBUyxLQUFULENBQXZCLENBSG9CO0FBSXBCLFlBQUksS0FBSyxLQUFMLENBQVcsVUFBWCxFQUF1QjtBQUN6QixxQkFBVyxZQUFNO0FBQ2YsbUJBQUssS0FBTCxDQUFXLFVBQVgsR0FEZTtXQUFOLEVBRVIsRUFGSCxFQUR5QjtTQUEzQjtPQUpGLE1BU08sSUFBSSxFQUFFLE9BQUYsS0FBYyxFQUFkLEVBQWtCOztBQUMzQixhQUFLLGNBQUwsR0FEMkI7QUFFM0IsVUFBRSxjQUFGLEdB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dkQsR0FDQSxJQURBLENBYks7QUFlUCxVQUFNLFdBQVcsS0FBSyxjQUFMLENBQW9CLFNBQXBCLENBQVgsQ0FmQztBQWdCUCxVQUFNLGdCQUFnQixFQUFFLElBQUksTUFBTSxFQUFOLEVBQVUsb0JBQWhCLEVBQTJCLFVBQTNCLEVBQWlDLFlBQWpDLEVBQXdDLGtCQUF4QyxFQUFrRCxZQUFsRCxFQUF5RCxrQkFBekQsRUFBaEIsQ0FoQkM7QUFpQlAsYUFDRTs7UUFBa0IsYUFBbEI7UUFDSSxLQUFLLFdBQUwsMEJBQW1CLDBCQUFlLE1BQWxDLENBREo7T0FERixDQWpCTzs7O1NBdEtVO0VBQWtCLGdCQUFNLFNBQU47O2tCQUFsQjs7O0FBK0xyQixVQUFVLFNBQVYsR0FBc0I7QUFDcEIsYUFBVyxpQkFBVSxNQUFWO0FBQ1gsU0FBTyxpQkFBVSxNQUFWO0FBQ1AsU0FBTyxpQkFBVSxNQUFWO0FBQ1AsYUFBVyxpQkFBVSxJQUFWO0FBQ1gsVUFBUSxpQkFBVSxJQUFWO0FBQ1IsZ0JBQWMsaUJBQVUsTUFBVjtBQUNkLGlCQUFlLGlCQUFVLElBQVY7QUFDZixjQUFZLGlCQUFVLE1BQVY7QUFDWixhQUFXLGlCQUFVLE1BQVY7QUFDWCxRQUFNLGlCQUFVLE1BQVY7QUFDTixZQUFVLGlCQUFVLElBQVY7QUFDVixTQUFPLGlCQUFVLFNBQVYsQ0FBb0IsQ0FDekIsaUJBQVUsSUFBVixFQUNBLGlCQUFVLE1BQVYsRUFDQSxpQkFBVSxLQUFWLENBQWdCO0FBQ2QsYUFBUyxpQkFBVSxNQUFWO0dBRFgsQ0FIeUIsQ0FBcEIsQ0FBUDtBQU9BLFlBQVUsaUJBQVUsSUFBVjtBQUNWLGlCQUFlLGlCQUFVLElBQVY7QUFDZixjQUFZLGlCQUFVLElBQVY7Q0FyQmQ7O0FBd0JBLFVBQVUsWUFBVixHQUF5QjtBQUN2QixjQUFZLEdBQVo7Q0FERjs7QUFJQSxVQUFVLGFBQVYsR0FBMEIsSUFBMUIiLCJmaWxlIjoiRGF0ZUlucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgRm9ybUVsZW1lbnQgZnJvbSAnLi9Gb3JtRWxlbWVudCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9JbnB1dCc7XG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24nO1xuaW1wb3J0IERhdGVwaWNrZXIgZnJvbSAnLi9EYXRlcGlja2VyJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0ZUlucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgb3BlbmVkOiAocHJvcHMuZGVmYXVsdE9wZW5lZCB8fCBmYWxzZSkgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVmFsdWVDaGFuZ2UgJiYgcHJldlN0YXRlLnZhbHVlICE9PSB0aGlzLnN0YXRlLnZhbHVlKSB7XG4gICAgICB0aGlzLnByb3BzLm9uVmFsdWVDaGFuZ2UodGhpcy5zdGF0ZS52YWx1ZSwgcHJldlN0YXRlLnZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBvbkRhdGVJY29uQ2xpY2soKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnNob3dEYXRlcGlja2VyKCk7XG4gICAgfSwgMTApO1xuICB9XG5cbiAgb25JbnB1dEtleURvd24oZSkge1xuICAgIGlmIChlLmtleUNvZGUgPT09IDEzKSB7IC8vIHJldHVybiBrZXlcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB0aGlzLnNldFZhbHVlRnJvbUlucHV0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgIGlmICh0aGlzLnByb3BzLm9uQ29tcGxldGUpIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5vbkNvbXBsZXRlKCk7XG4gICAgICAgIH0sIDEwKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gNDApIHsgLy8gZG93biBrZXlcbiAgICAgIHRoaXMuc2hvd0RhdGVwaWNrZXIoKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnByb3BzLm9uS2V5RG93bikge1xuICAgICAgdGhpcy5wcm9wcy5vbktleURvd24oZSk7XG4gICAgfVxuICB9XG5cbiAgb25JbnB1dENoYW5nZShlKSB7XG4gICAgY29uc3QgaW5wdXRWYWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBpbnB1dFZhbHVlIH0pO1xuICAgIGlmICh0aGlzLnByb3BzLm9uQ2hhbmdlKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKGUsIGlucHV0VmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIG9uSW5wdXRCbHVyKGUpIHtcbiAgICB0aGlzLnNldFZhbHVlRnJvbUlucHV0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghdGhpcy5pc0ZvY3VzZWRJbkNvbXBvbmVudCgpKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uQmx1cikge1xuICAgICAgICAgIHRoaXMucHJvcHMub25CbHVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucHJvcHMub25Db21wbGV0ZSkge1xuICAgICAgICAgIHRoaXMucHJvcHMub25Db21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgMTApO1xuICB9XG5cbiAgb25EYXRlcGlja2VyU2VsZWN0KHZhbHVlKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlLCBpbnB1dFZhbHVlOiB1bmRlZmluZWQgfSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgb3BlbmVkOiBmYWxzZSB9KTtcbiAgICAgIGNvbnN0IGlucHV0RWwgPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzLnJlZnMuaW5wdXQpO1xuICAgICAgaWYgKGlucHV0RWwpIHtcbiAgICAgICAgaW5wdXRFbC5mb2N1cygpO1xuICAgICAgICBpbnB1dEVsLnNlbGVjdCgpO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMucHJvcHMub25Db21wbGV0ZSkge1xuICAgICAgICB0aGlzLnByb3BzLm9uQ29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9LCAyMDApO1xuICB9XG5cbiAgb25EYXRlcGlja2VyQmx1cigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgb3BlbmVkOiBmYWxzZSB9KTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghdGhpcy5pc0ZvY3VzZWRJbkNvbXBvbmVudCgpKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uQmx1cikge1xuICAgICAgICAgIHRoaXMucHJvcHMub25CbHVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucHJvcHMub25Db21wbGV0ZSkge1xuICAgICAgICAgIHRoaXMucHJvcHMub25Db21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgMTApO1xuICB9XG5cbiAgb25EYXRlcGlja2VyQ2xvc2UoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG9wZW5lZDogZmFsc2UgfSk7XG4gICAgY29uc3QgaW5wdXRFbCA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMucmVmcy5pbnB1dCk7XG4gICAgaWYgKGlucHV0RWwpIHtcbiAgICAgIGlucHV0RWwuZm9jdXMoKTtcbiAgICAgIGlucHV0RWwuc2VsZWN0KCk7XG4gICAgfVxuICB9XG5cbiAgc2V0VmFsdWVGcm9tSW5wdXQoaW5wdXRWYWx1ZSkge1xuICAgIGxldCB2YWx1ZSA9IHRoaXMuc3RhdGUudmFsdWU7XG4gICAgaWYgKCFpbnB1dFZhbHVlKSB7XG4gICAgICB2YWx1ZSA9ICcnO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSA9IG1vbWVudChpbnB1dFZhbHVlLCB0aGlzLnByb3BzLmRhdGVGb3JtYXQpO1xuICAgICAgaWYgKHZhbHVlLmlzVmFsaWQoKSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSAnJztcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlLCBpbnB1dFZhbHVlOiB1bmRlZmluZWQgfSk7XG4gIH1cblxuICBpc0ZvY3VzZWRJbkNvbXBvbmVudCgpIHtcbiAgICBjb25zdCByb290RWwgPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcbiAgICBsZXQgdGFyZ2V0RWwgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgIHdoaWxlICh0YXJnZXRFbCAmJiB0YXJnZXRFbCAhPT0gcm9vdEVsKSB7XG4gICAgICB0YXJnZXRFbCA9IHRhcmdldEVsLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiAhIXRhcmdldEVsO1xuICB9XG5cbiAgc2hvd0RhdGVwaWNrZXIoKSB7XG4gICAgbGV0IHZhbHVlID0gdGhpcy5zdGF0ZS52YWx1ZTtcbiAgICBpZiAodHlwZW9mIHRoaXMuc3RhdGUuaW5wdXRWYWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhbHVlID0gbW9tZW50KHRoaXMuc3RhdGUuaW5wdXRWYWx1ZSwgdGhpcy5wcm9wcy5kYXRlRm9ybWF0KTtcbiAgICAgIGlmICh2YWx1ZS5pc1ZhbGlkKCkpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5mb3JtYXQoJ1lZWVktTU0tREQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gdGhpcy5zdGF0ZS52YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG9wZW5lZDogdHJ1ZSwgdmFsdWUgfSk7XG4gIH1cblxuICByZW5kZXJJbnB1dCh7IGlucHV0VmFsdWUsIC4uLnByb3BzIH0pIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J3NsZHMtaW5wdXQtaGFzLWljb24gc2xkcy1pbnB1dC1oYXMtaWNvbi0tcmlnaHQnPlxuICAgICAgICA8SW5wdXQgcmVmPSdpbnB1dCcgdmFsdWU9eyBpbnB1dFZhbHVlIH0geyAuLi5wcm9wcyB9XG4gICAgICAgICAgb25LZXlEb3duPXsgdGhpcy5vbklucHV0S2V5RG93bi5iaW5kKHRoaXMpIH1cbiAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25JbnB1dENoYW5nZS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICBvbkJsdXI9eyB0aGlzLm9uSW5wdXRCbHVyLmJpbmQodGhpcykgfVxuICAgICAgICAvPlxuICAgICAgICA8SWNvbiBpY29uPSdldmVudCcgY2xhc3NOYW1lPSdzbGRzLWlucHV0X19pY29uJyBzdHlsZT17IHsgY3Vyc29yOiAncG9pbnRlcicgfSB9XG4gICAgICAgICAgb25DbGljaz17IHRoaXMub25EYXRlSWNvbkNsaWNrLmJpbmQodGhpcykgfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlckRyb3Bkb3duKGRhdGVWYWx1ZSkge1xuICAgIGNvbnN0IGRhdGVwaWNrZXJDbGFzc05hbWVzID0gY2xhc3NuYW1lcyhcbiAgICAgICdzbGRzLWRyb3Bkb3duJyxcbiAgICAgICdzbGRzLWRyb3Bkb3duLS1sZWZ0J1xuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMuc3RhdGUub3BlbmVkID9cbiAgICAgIDxEYXRlcGlja2VyIGNsYXNzTmFtZT17IGRhdGVwaWNrZXJDbGFzc05hbWVzIH0gc2VsZWN0ZWREYXRlPXsgZGF0ZVZhbHVlIH0gYXV0b0ZvY3VzXG4gICAgICAgIG9uU2VsZWN0PXsgdGhpcy5vbkRhdGVwaWNrZXJTZWxlY3QuYmluZCh0aGlzKSB9XG4gICAgICAgIG9uQmx1cj17IHRoaXMub25EYXRlcGlja2VyQmx1ci5iaW5kKHRoaXMpIH1cbiAgICAgICAgb25DbG9zZT17IHRoaXMub25EYXRlcGlja2VyQ2xvc2UuYmluZCh0aGlzKSB9XG4gICAgICAvPiA6XG4gICAgICA8ZGl2IC8+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICB0b3RhbENvbHMsIGNvbHMsIGxhYmVsLCByZXF1aXJlZCwgZXJyb3IsXG4gICAgICBkZWZhdWx0VmFsdWUsIHZhbHVlLCBkYXRlRm9ybWF0LFxuICAgICAgb25DaGFuZ2UsIG9uS2V5RG93biwgb25CbHVyLCAuLi5wcm9wcyxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBkYXRlVmFsdWUgPVxuICAgICAgdHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJyA/IHZhbHVlIDpcbiAgICAgIHR5cGVvZiB0aGlzLnN0YXRlLnZhbHVlICE9PSAndW5kZWZpbmVkJyA/IHRoaXMuc3RhdGUudmFsdWUgOlxuICAgICAgZGVmYXVsdFZhbHVlO1xuICAgIGNvbnN0IG12YWx1ZSA9IG1vbWVudChkYXRlVmFsdWUsICdZWVlZLU1NLUREJyk7XG4gICAgY29uc3QgaW5wdXRWYWx1ZSA9XG4gICAgICB0eXBlb2YgdGhpcy5zdGF0ZS5pbnB1dFZhbHVlICE9PSAndW5kZWZpbmVkJyA/IHRoaXMuc3RhdGUuaW5wdXRWYWx1ZSA6XG4gICAgICB0eXBlb2YgZGF0ZVZhbHVlICE9PSAndW5kZWZpbmVkJyAmJiBtdmFsdWUuaXNWYWxpZCgpID8gbXZhbHVlLmZvcm1hdChkYXRlRm9ybWF0KSA6XG4gICAgICBudWxsO1xuICAgIGNvbnN0IGRyb3Bkb3duID0gdGhpcy5yZW5kZXJEcm9wZG93bihkYXRlVmFsdWUpO1xuICAgIGNvbnN0IGZvcm1FbGVtUHJvcHMgPSB7IGlkOiBwcm9wcy5pZCwgdG90YWxDb2xzLCBjb2xzLCBsYWJlbCwgcmVxdWlyZWQsIGVycm9yLCBkcm9wZG93biB9O1xuICAgIHJldHVybiAoXG4gICAgICA8Rm9ybUVsZW1lbnQgeyAuLi5mb3JtRWxlbVByb3BzIH0+XG4gICAgICAgIHsgdGhpcy5yZW5kZXJJbnB1dCh7IGlucHV0VmFsdWUsIC4uLnByb3BzIH0pIH1cbiAgICAgIDwvRm9ybUVsZW1lbnQ+XG4gICAgKTtcbiAgfVxufVxuXG5EYXRlSW5wdXQucHJvcFR5cGVzID0ge1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgZGVmYXVsdFZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkZWZhdWx0T3BlbmVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGF0ZUZvcm1hdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG90YWxDb2xzOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjb2xzOiBQcm9wVHlwZXMubnVtYmVyLFxuICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gIGVycm9yOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMuYm9vbCxcbiAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBtZXNzYWdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIH0pLFxuICBdKSxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBvblZhbHVlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Db21wbGV0ZTogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5EYXRlSW5wdXQuZGVmYXVsdFByb3BzID0ge1xuICBkYXRlRm9ybWF0OiAnTCcsXG59O1xuXG5EYXRlSW5wdXQuaXNGb3JtRWxlbWVudCA9IHRydWU7XG4iXX0=