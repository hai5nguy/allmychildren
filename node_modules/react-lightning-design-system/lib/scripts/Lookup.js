'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _FormElement = require('./FormElement');

var _FormElement2 = _interopRequireDefault(_FormElement);

var _Input = require('./Input');

var _Input2 = _interopRequireDefault(_Input);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Spinner = require('./Spinner');

var _Spinner2 = _interopRequireDefault(_Spinner);

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 */

var LookupSelection = function (_Component) {
  (0, _inherits3.default)(LookupSelection, _Component);

  function LookupSelection() {
    (0, _classCallCheck3.default)(this, LookupSelection);
    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(LookupSelection).apply(this, arguments));
  }

  (0, _createClass3.default)(LookupSelection, [{
    key: 'onKeyDown',
    value: function onKeyDown(e) {
      if (e.keyCode === 8 || e.keyCode === 46) {
        // Bacspace / DEL
        e.preventDefault();
        e.stopPropagation();
        if (this.props.onResetSelection) {
          this.props.onResetSelection();
        }
      }
    }
  }, {
    key: 'renderPill',
    value: function renderPill(selected) {
      var onPillClick = function onPillClick(e) {
        e.target.focus();
        e.preventDefault();
        e.stopPropagation();
      };
      return _react2.default.createElement(
        'a',
        { className: 'slds-pill',
          ref: 'pill',
          onKeyDown: this.onKeyDown.bind(this),
          onClick: onPillClick,
          tabIndex: 0
        },
        selected.icon ? _react2.default.createElement(_Icon2.default, { className: 'slds-pill__icon', category: selected.category, icon: selected.icon }) : undefined,
        _react2.default.createElement(
          'span',
          { className: 'slds-pill__label' },
          selected.label
        ),
        _react2.default.createElement(_Button2.default, { className: 'slds-pill__remove', type: 'icon-bare', icon: 'close', alt: 'Remove',
          tabIndex: -1,
          onClick: this.props.onResetSelection
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
      var hidden = _props.hidden;
      var selected = _props.selected;

      var lookupClassNames = (0, _classnames2.default)('slds-lookup', 'slds-has-selection', { 'slds-hide': hidden });
      return _react2.default.createElement(
        'div',
        { className: lookupClassNames, 'data-select': 'single', 'data-scope': 'single', 'data-typeahead': false },
        _react2.default.createElement(
          'div',
          { className: 'slds-pill__container' },
          selected ? this.renderPill(selected) : undefined
        )
      );
    }
  }]);
  return LookupSelection;
}(_react.Component);

var LookupEntryType = _react.PropTypes.shape({
  category: _react.PropTypes.string,
  icon: _react.PropTypes.string,
  label: _react.PropTypes.string,
  value: _react.PropTypes.string
});

LookupSelection.propTypes = {
  selected: LookupEntryType,
  hidden: _react.PropTypes.bool,
  onResetSelection: _react.PropTypes.func
};

/**
 *
 */

var LookupSearch = function (_Component2) {
  (0, _inherits3.default)(LookupSearch, _Component2);

  function LookupSearch() {
    (0, _classCallCheck3.default)(this, LookupSearch);
    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(LookupSearch).apply(this, arguments));
  }

  (0, _createClass3.default)(LookupSearch, [{
    key: 'onLookupIconClick',
    value: function onLookupIconClick() {
      this.props.onSubmit();
    }
  }, {
    key: 'onInputKeyDown',
    value: function onInputKeyDown(e) {
      if (e.keyCode === 13) {
        // return key
        e.preventDefault();
        e.stopPropagation();
        var searchText = e.target.value;
        if (searchText) {
          this.props.onSubmit();
        } else {
          this.props.onComplete();
        }
      } else if (e.keyCode === 40) {
        // down key
        e.preventDefault();
        e.stopPropagation();
        this.props.onPressDown();
      } else if (e.keyCode === 27) {
        // ESC
        e.preventDefault();
        e.stopPropagation();
        this.props.onComplete();
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: 'onInputChange',
    value: function onInputChange(e) {
      var searchText = e.target.value;
      this.props.onChange(searchText);
    }
  }, {
    key: 'onInputBlur',
    value: function onInputBlur(e) {
      if (this.props.onBlur) {
        this.props.onBlur(e);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props;
      var hidden = _props2.hidden;
      var searchText = _props2.searchText;
      var props = (0, _objectWithoutProperties3.default)(_props2, ['hidden', 'searchText']);

      var lookupSearchClassNames = (0, _classnames2.default)('slds-input-has-icon', 'slds-input-has-icon--right', { 'slds-hide': hidden });
      return _react2.default.createElement(
        'div',
        { className: lookupSearchClassNames },
        _react2.default.createElement(_Input2.default, (0, _extends3.default)({}, props, {
          ref: 'input',
          value: searchText,
          onKeyDown: this.onInputKeyDown.bind(this),
          onChange: this.onInputChange.bind(this),
          onBlur: this.onInputBlur.bind(this)
        })),
        _react2.default.createElement(_Icon2.default, { icon: 'search', className: 'slds-input__icon', style: { cursor: 'pointer' },
          onClick: this.onLookupIconClick.bind(this)
        })
      );
    }
  }]);
  return LookupSearch;
}(_react.Component);

LookupSearch.propTypes = {
  hidden: _react.PropTypes.bool,
  searchText: _react.PropTypes.string,
  onKeyDown: _react.PropTypes.func,
  onBlur: _react.PropTypes.func,
  onChange: _react.PropTypes.func,
  onPressDown: _react.PropTypes.func,
  onSubmit: _react.PropTypes.func,
  onComplete: _react.PropTypes.func
};

/**
 *
 */

var LookupCandidateList = function (_Component3) {
  (0, _inherits3.default)(LookupCandidateList, _Component3);

  function LookupCandidateList() {
    (0, _classCallCheck3.default)(this, LookupCandidateList);
    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(LookupCandidateList).apply(this, arguments));
  }

  (0, _createClass3.default)(LookupCandidateList, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.focus) {
        this.focusToTargetItemEl(0);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (this.props.focus && !prevProps.focus) {
        this.focusToTargetItemEl(0);
      }
    }
  }, {
    key: 'onSelect',
    value: function onSelect(entry) {
      if (this.props.onSelect) {
        this.props.onSelect(entry);
      }
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(e) {
      if (e.keyCode === 38 || e.keyCode === 40) {
        // UP/DOWN
        e.preventDefault();
        e.stopPropagation();
        var currentEl = e.target.parentElement;
        var itemEl = e.keyCode === 40 ? currentEl.nextSibling : currentEl.previousSibling;
        while (itemEl) {
          var anchorEl = itemEl.querySelector('.react-slds-candidate[tabIndex]');
          if (anchorEl && !anchorEl.disabled) {
            anchorEl.focus();
            return;
          }
          itemEl = e.keyCode === 40 ? itemEl.nextSibling : itemEl.previousSibling;
        }
      } else if (e.keyCode === 27) {
        // ESC
        e.preventDefault();
        e.stopPropagation();
        this.onSelect(null);
      }
    }
  }, {
    key: 'focusToTargetItemEl',
    value: function focusToTargetItemEl(index) {
      var el = _reactDom2.default.findDOMNode(this);
      var anchors = el.querySelectorAll('.react-slds-candidate[tabIndex]');
      if (anchors[index]) {
        anchors[index].focus();
      }
    }
  }, {
    key: 'renderCandidate',
    value: function renderCandidate(entry) {
      var _this4 = this;

      return _react2.default.createElement(
        'li',
        { className: 'slds-lookup__item', key: entry.value },
        _react2.default.createElement(
          'a',
          { className: 'slds-truncate react-slds-candidate', tabIndex: -1, role: 'option',
            onKeyDown: function onKeyDown(e) {
              return e.keyCode === 13 && _this4.onSelect(entry);
            },
            onBlur: this.props.onBlur,
            onClick: function onClick() {
              return _this4.onSelect(entry);
            }
          },
          entry.icon ? _react2.default.createElement(_Icon2.default, { category: entry.category, icon: entry.icon, size: 'small' }) : undefined,
          entry.label
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props;
      var _props3$data = _props3.data;
      var data = _props3$data === undefined ? [] : _props3$data;
      var hidden = _props3.hidden;
      var loading = _props3.loading;
      var header = _props3.header;
      var footer = _props3.footer;
      var _props3$filter = _props3.filter;
      var filter = _props3$filter === undefined ? function () {
        return true;
      } : _props3$filter;

      var lookupMenuClassNames = (0, _classnames2.default)('slds-lookup__menu', { 'slds-hide': hidden });
      return _react2.default.createElement(
        'div',
        { className: lookupMenuClassNames, role: 'listbox',
          onKeyDown: this.onKeyDown.bind(this)
        },
        header ? _react2.default.createElement(
          'div',
          { className: 'slds-lookup__item' },
          header
        ) : undefined,
        _react2.default.createElement(
          'ul',
          { className: 'slds-lookup__list', role: 'presentation' },
          data.filter(filter).map(this.renderCandidate.bind(this)),
          loading ? _react2.default.createElement(
            'li',
            { className: 'slds-lookup__item', key: 'loading' },
            _react2.default.createElement(_Spinner2.default, { size: 'small', style: { margin: '0 auto' } })
          ) : undefined
        ),
        footer ? _react2.default.createElement(
          'div',
          { className: 'slds-lookup__item' },
          footer
        ) : undefined
      );
    }
  }]);
  return LookupCandidateList;
}(_react.Component);

LookupCandidateList.propTypes = {
  data: _react.PropTypes.arrayOf(LookupEntryType),
  focus: _react.PropTypes.bool,
  loading: _react.PropTypes.bool,
  hidden: _react.PropTypes.bool,
  filter: _react.PropTypes.func,
  onSelect: _react.PropTypes.func,
  onBlur: _react.PropTypes.func,
  header: _react.PropTypes.node,
  footer: _react.PropTypes.node
};

/**
 *
 */

var Lookup = function (_Component4) {
  (0, _inherits3.default)(Lookup, _Component4);

  function Lookup(props) {
    (0, _classCallCheck3.default)(this, Lookup);

    var _this5 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Lookup).call(this, props));

    _this5.state = {
      selected: props.defaultSelected,
      opened: props.defaultOpened,
      searchText: props.defaultSearchText,
      focusFirstCandidate: false
    };
    return _this5;
  }

  (0, _createClass3.default)(Lookup, [{
    key: 'onSearchTextChange',
    value: function onSearchTextChange(searchText) {
      this.setState({ searchText: searchText });
      if (this.props.onSearchTextChange) {
        this.props.onSearchTextChange(searchText);
      }
    }
  }, {
    key: 'onLookupRequest',
    value: function onLookupRequest(searchText) {
      this.setState({ opened: true });
      if (this.props.onLookupRequest) {
        this.props.onLookupRequest(searchText);
      }
    }
  }, {
    key: 'onComplete',
    value: function onComplete() {
      if (this.props.onComplete) {
        this.props.onComplete();
      }
    }
  }, {
    key: 'onResetSelection',
    value: function onResetSelection() {
      var _this6 = this;

      this.setState({ selected: null });
      if (this.props.onSelect) {
        this.props.onSelect(null);
      }
      this.onSearchTextChange('');
      this.onLookupRequest('');
      setTimeout(function () {
        var searchElem = _reactDom2.default.findDOMNode(_this6.refs.search);
        var inputElem = searchElem.querySelector('input');
        inputElem.focus();
      }, 10);
    }
  }, {
    key: 'onLookupItemSelect',
    value: function onLookupItemSelect(selected) {
      var _this7 = this;

      if (selected) {
        this.setState({ selected: selected, opened: false });
        if (this.props.onSelect) {
          this.props.onSelect(selected);
        }
        setTimeout(function () {
          var selectionElem = _reactDom2.default.findDOMNode(_this7.refs.selection);
          var pillElem = selectionElem.querySelector('a');
          if (pillElem) {
            pillElem.focus();
          }
        }, 10);
      } else {
        this.setState({ opened: false });
        setTimeout(function () {
          var searchElem = _reactDom2.default.findDOMNode(_this7.refs.search);
          var inputElem = searchElem.querySelector('input');
          inputElem.focus();
        }, 10);
      }
      if (this.props.onComplete) {
        this.props.onComplete();
      }
    }
  }, {
    key: 'onFocusFirstCandidate',
    value: function onFocusFirstCandidate() {
      var _this8 = this;

      var _props$opened = this.props.opened;
      var opened = _props$opened === undefined ? this.state.opened : _props$opened;

      if (!opened) {
        this.onLookupRequest(this.state.searchText);
      } else {
        this.setState({ focusFirstCandidate: true });
        setTimeout(function () {
          _this8.setState({ focusFirstCandidate: false });
        }, 10);
      }
    }
  }, {
    key: 'onBlur',
    value: function onBlur() {
      var _this9 = this;

      setTimeout(function () {
        if (!_this9.isFocusedInComponent()) {
          _this9.setState({ opened: false });
          if (_this9.props.onBlur) {
            _this9.props.onBlur();
          }
          if (_this9.props.onComplete) {
            _this9.props.onComplete();
          }
        }
      }, 10);
    }
  }, {
    key: 'isFocusedInComponent',
    value: function isFocusedInComponent() {
      var rootEl = _reactDom2.default.findDOMNode(this);
      var targetEl = document.activeElement;
      while (targetEl && targetEl !== rootEl) {
        targetEl = targetEl.parentNode;
      }
      return !!targetEl;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this10 = this;

      var _props4 = this.props;
      var totalCols = _props4.totalCols;
      var cols = _props4.cols;
      var label = _props4.label;
      var className = _props4.className;
      var _props4$selected = _props4.selected;
      var selected = _props4$selected === undefined ? this.state.selected : _props4$selected;
      var defaultSelected = _props4.defaultSelected;
      var _props4$opened = _props4.opened;
      var opened = _props4$opened === undefined ? this.state.opened : _props4$opened;
      var defaultOpened = _props4.defaultOpened;
      var _props4$searchText = _props4.searchText;
      var searchText = _props4$searchText === undefined ? this.state.searchText : _props4$searchText;
      var defaultSearchText = _props4.defaultSearchText;
      var loading = _props4.loading;
      var lookupFilter = _props4.lookupFilter;
      var listHeader = _props4.listHeader;
      var listFooter = _props4.listFooter;
      var data = _props4.data;
      var props = (0, _objectWithoutProperties3.default)(_props4, ['totalCols', 'cols', 'label', 'className', 'selected', 'defaultSelected', 'opened', 'defaultOpened', 'searchText', 'defaultSearchText', 'loading', 'lookupFilter', 'listHeader', 'listFooter', 'data']);

      var dropdown = _react2.default.createElement(LookupCandidateList, {
        ref: 'candidateList',
        data: data,
        focus: this.state.focusFirstCandidate,
        hidden: !opened,
        loading: loading,
        filter: lookupFilter ? function (entry) {
          return lookupFilter(entry, searchText);
        } : undefined,
        header: listHeader,
        footer: listFooter,
        onSelect: this.onLookupItemSelect.bind(this),
        onBlur: this.onBlur.bind(this)
      });
      var formElemProps = { id: props.id, totalCols: totalCols, cols: cols, label: label, dropdown: dropdown };
      return _react2.default.createElement(
        _FormElement2.default,
        formElemProps,
        _react2.default.createElement(
          'div',
          { className: className },
          _react2.default.createElement(LookupSelection, {
            ref: 'selection',
            selected: selected,
            hidden: !selected,
            onResetSelection: this.onResetSelection.bind(this)
          }),
          _react2.default.createElement(LookupSearch, (0, _extends3.default)({}, props, {
            ref: 'search',
            hidden: !!selected,
            searchText: searchText,
            onChange: this.onSearchTextChange.bind(this),
            onSubmit: function onSubmit() {
              return _this10.onLookupRequest(searchText);
            },
            onPressDown: this.onFocusFirstCandidate.bind(this),
            onComplete: this.onComplete.bind(this),
            onBlur: this.onBlur.bind(this)
          }))
        )
      );
    }
  }]);
  return Lookup;
}(_react.Component);

exports.default = Lookup;


Lookup.propTypes = {
  className: _react.PropTypes.string,
  label: _react.PropTypes.string,
  value: _react.PropTypes.string,
  defaultValue: _react.PropTypes.string,
  selected: LookupEntryType,
  defaultSelected: LookupEntryType,
  opened: _react.PropTypes.bool,
  defaultOpened: _react.PropTypes.bool,
  searchText: _react.PropTypes.string,
  defaultSearchText: _react.PropTypes.string,
  loading: _react.PropTypes.bool,
  data: _react.PropTypes.arrayOf(LookupEntryType),
  lookupFilter: _react.PropTypes.func,
  listHeader: _react.PropTypes.node,
  listFooter: _react.PropTypes.node,
  onBlur: _react.PropTypes.func,
  onSearchTextChange: _react.PropTypes.func,
  onLookupRequest: _react.PropTypes.func,
  onSelect: _react.PropTypes.func,
  onComplete: _react.PropTypes.func,
  totalCols: _react.PropTypes.number,
  cols: _react.PropTypes.number
};

Lookup.isFormElement = true;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL0xvb2t1cC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFZTTs7Ozs7Ozs7Ozs4QkFDTSxHQUFHO0FBQ1gsVUFBSSxFQUFFLE9BQUYsS0FBYyxDQUFkLElBQW1CLEVBQUUsT0FBRixLQUFjLEVBQWQsRUFBa0I7O0FBQ3ZDLFVBQUUsY0FBRixHQUR1QztBQUV2QyxVQUFFLGVBQUYsR0FGdUM7QUFHdkMsWUFBSSxLQUFLLEtBQUwsQ0FBVyxnQkFBWCxFQUE2QjtBQUMvQixlQUFLLEtBQUwsQ0FBVyxnQkFBWCxHQUQrQjtTQUFqQztPQUhGOzs7OytCQVNTLFVBQVU7QUFDbkIsVUFBTSxjQUFjLFNBQWQsV0FBYyxDQUFDLENBQUQsRUFBTztBQUN6QixVQUFFLE1BQUYsQ0FBUyxLQUFULEdBRHlCO0FBRXpCLFVBQUUsY0FBRixHQUZ5QjtBQUd6QixVQUFFLGVBQUYsR0FIeUI7T0FBUCxDQUREO0FBTW5CLGFBQ0U7O1VBQUcsV0FBVSxXQUFWO0FBQ0QsZUFBSSxNQUFKO0FBQ0EscUJBQVksS0FBSyxTQUFMLENBQWUsSUFBZixDQUFvQixJQUFwQixDQUFaO0FBQ0EsbUJBQVUsV0FBVjtBQUNBLG9CQUFXLENBQVg7U0FKRjtRQU9JLFNBQVMsSUFBVCxHQUNBLGdEQUFNLFdBQVUsaUJBQVYsRUFBNEIsVUFBVyxTQUFTLFFBQVQsRUFBb0IsTUFBTyxTQUFTLElBQVQsRUFBeEUsQ0FEQSxHQUVBLFNBRkE7UUFJRjs7WUFBTSxXQUFVLGtCQUFWLEVBQU47VUFBcUMsU0FBUyxLQUFUO1NBWHZDO1FBWUUsa0RBQVEsV0FBVSxtQkFBVixFQUE4QixNQUFLLFdBQUwsRUFBaUIsTUFBSyxPQUFMLEVBQWEsS0FBSSxRQUFKO0FBQ2xFLG9CQUFXLENBQUMsQ0FBRDtBQUNYLG1CQUFVLEtBQUssS0FBTCxDQUFXLGdC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O3FCQUFNLFFBQUssZUFBTCxDQUFxQixVQUFyQjthQUFOO0FBQ1gseUJBQWMsS0FBSyxxQkFBTCxDQUEyQixJQUEzQixDQUFnQyxJQUFoQyxDQUFkO0FBQ0Esd0JBQWEsS0FBSyxVQUFMLENBQWdCLElBQWhCLENBQXFCLElBQXJCLENBQWI7QUFDQSxvQkFBUyxLQUFLLE1BQUwsQ0FBWSxJQUFaLENBQWlCLElBQWpCLENBQVQ7WUFSRixDQVBGO1NBREY7T0FERixDQTFCTzs7O1NBeEdVOzs7Ozs7QUE0SnJCLE9BQU8sU0FBUCxHQUFtQjtBQUNqQixhQUFXLGlCQUFVLE1BQVY7QUFDWCxTQUFPLGlCQUFVLE1BQVY7QUFDUCxTQUFPLGlCQUFVLE1BQVY7QUFDUCxnQkFBYyxpQkFBVSxNQUFWO0FBQ2QsWUFBVSxlQUFWO0FBQ0EsbUJBQWlCLGVBQWpCO0FBQ0EsVUFBUSxpQkFBVSxJQUFWO0FBQ1IsaUJBQWUsaUJBQVUsSUFBVjtBQUNmLGNBQVksaUJBQVUsTUFBVjtBQUNaLHFCQUFtQixpQkFBVSxNQUFWO0FBQ25CLFdBQVMsaUJBQVUsSUFBVjtBQUNULFFBQU0saUJBQVUsT0FBVixDQUFrQixlQUFsQixDQUFOO0FBQ0EsZ0JBQWMsaUJBQVUsSUFBVjtBQUNkLGNBQVksaUJBQVUsSUFBVjtBQUNaLGNBQVksaUJBQVUsSUFBVjtBQUNaLFVBQVEsaUJBQVUsSUFBVjtBQUNSLHNCQUFvQixpQkFBVSxJQUFWO0FBQ3BCLG1CQUFpQixpQkFBVSxJQUFWO0FBQ2pCLFlBQVUsaUJBQVUsSUFBVjtBQUNWLGNBQVksaUJBQVUsSUFBVjtBQUNaLGFBQVcsaUJBQVUsTUFBVjtBQUNYLFFBQU0saUJBQVUsTUFBVjtDQXRCUjs7QUF5QkEsT0FBTyxhQUFQLEdBQXVCLElBQXZCIiwiZmlsZSI6Ikxvb2t1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgRm9ybUVsZW1lbnQgZnJvbSAnLi9Gb3JtRWxlbWVudCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9JbnB1dCc7XG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi9TcGlubmVyJztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nO1xuXG4vKipcbiAqXG4gKi9cbmNsYXNzIExvb2t1cFNlbGVjdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIG9uS2V5RG93bihlKSB7XG4gICAgaWYgKGUua2V5Q29kZSA9PT0gOCB8fCBlLmtleUNvZGUgPT09IDQ2KSB7IC8vIEJhY3NwYWNlIC8gREVMXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgaWYgKHRoaXMucHJvcHMub25SZXNldFNlbGVjdGlvbikge1xuICAgICAgICB0aGlzLnByb3BzLm9uUmVzZXRTZWxlY3Rpb24oKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZW5kZXJQaWxsKHNlbGVjdGVkKSB7XG4gICAgY29uc3Qgb25QaWxsQ2xpY2sgPSAoZSkgPT4ge1xuICAgICAgZS50YXJnZXQuZm9jdXMoKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgPGEgY2xhc3NOYW1lPSdzbGRzLXBpbGwnXG4gICAgICAgIHJlZj0ncGlsbCdcbiAgICAgICAgb25LZXlEb3duPXsgdGhpcy5vbktleURvd24uYmluZCh0aGlzKSB9XG4gICAgICAgIG9uQ2xpY2s9eyBvblBpbGxDbGljayB9XG4gICAgICAgIHRhYkluZGV4PXsgMCB9XG4gICAgICA+XG4gICAgICAgIHtcbiAgICAgICAgICBzZWxlY3RlZC5pY29uID9cbiAgICAgICAgICA8SWNvbiBjbGFzc05hbWU9J3NsZHMtcGlsbF9faWNvbicgY2F0ZWdvcnk9eyBzZWxlY3RlZC5jYXRlZ29yeSB9IGljb249eyBzZWxlY3RlZC5pY29uIH0gLz4gOlxuICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgICB9XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nc2xkcy1waWxsX19sYWJlbCc+eyBzZWxlY3RlZC5sYWJlbCB9PC9zcGFuPlxuICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT0nc2xkcy1waWxsX19yZW1vdmUnIHR5cGU9J2ljb24tYmFyZScgaWNvbj0nY2xvc2UnIGFsdD0nUmVtb3ZlJ1xuICAgICAgICAgIHRhYkluZGV4PXsgLTEgfVxuICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnByb3BzLm9uUmVzZXRTZWxlY3Rpb24gfVxuICAgICAgICAvPlxuICAgICAgPC9hPlxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBoaWRkZW4sIHNlbGVjdGVkIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGxvb2t1cENsYXNzTmFtZXMgPSBjbGFzc25hbWVzKFxuICAgICAgJ3NsZHMtbG9va3VwJyxcbiAgICAgICdzbGRzLWhhcy1zZWxlY3Rpb24nLFxuICAgICAgeyAnc2xkcy1oaWRlJzogaGlkZGVuIH1cbiAgICApO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17IGxvb2t1cENsYXNzTmFtZXMgfSBkYXRhLXNlbGVjdD0nc2luZ2xlJyBkYXRhLXNjb3BlPSdzaW5nbGUnIGRhdGEtdHlwZWFoZWFkPXsgZmFsc2UgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NsZHMtcGlsbF9fY29udGFpbmVyJz5cbiAgICAgICAgICB7IHNlbGVjdGVkID8gdGhpcy5yZW5kZXJQaWxsKHNlbGVjdGVkKSA6IHVuZGVmaW5lZCB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG59XG5cbmNvbnN0IExvb2t1cEVudHJ5VHlwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGNhdGVnb3J5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpY29uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcblxuTG9va3VwU2VsZWN0aW9uLnByb3BUeXBlcyA9IHtcbiAgc2VsZWN0ZWQ6IExvb2t1cEVudHJ5VHlwZSxcbiAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25SZXNldFNlbGVjdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5cbi8qKlxuICpcbiAqL1xuY2xhc3MgTG9va3VwU2VhcmNoIGV4dGVuZHMgQ29tcG9uZW50IHtcblxuICBvbkxvb2t1cEljb25DbGljaygpIHtcbiAgICB0aGlzLnByb3BzLm9uU3VibWl0KCk7XG4gIH1cblxuICBvbklucHV0S2V5RG93bihlKSB7XG4gICAgaWYgKGUua2V5Q29kZSA9PT0gMTMpIHsgLy8gcmV0dXJuIGtleVxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGNvbnN0IHNlYXJjaFRleHQgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgIGlmIChzZWFyY2hUZXh0KSB7XG4gICAgICAgIHRoaXMucHJvcHMub25TdWJtaXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucHJvcHMub25Db21wbGV0ZSgpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSA0MCkgeyAvLyBkb3duIGtleVxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIHRoaXMucHJvcHMub25QcmVzc0Rvd24oKTtcbiAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gMjcpIHsgLy8gRVNDXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgdGhpcy5wcm9wcy5vbkNvbXBsZXRlKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnByb3BzLm9uS2V5RG93bikge1xuICAgICAgdGhpcy5wcm9wcy5vbktleURvd24oZSk7XG4gICAgfVxuICB9XG5cbiAgb25JbnB1dENoYW5nZShlKSB7XG4gICAgY29uc3Qgc2VhcmNoVGV4dCA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIHRoaXMucHJvcHMub25DaGFuZ2Uoc2VhcmNoVGV4dCk7XG4gIH1cblxuICBvbklucHV0Qmx1cihlKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25CbHVyKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQmx1cihlKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBoaWRkZW4sIHNlYXJjaFRleHQsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGxvb2t1cFNlYXJjaENsYXNzTmFtZXMgPSBjbGFzc25hbWVzKFxuICAgICAgJ3NsZHMtaW5wdXQtaGFzLWljb24nLFxuICAgICAgJ3NsZHMtaW5wdXQtaGFzLWljb24tLXJpZ2h0JyxcbiAgICAgIHsgJ3NsZHMtaGlkZSc6IGhpZGRlbiB9XG4gICAgKTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9eyBsb29rdXBTZWFyY2hDbGFzc05hbWVzIH0+XG4gICAgICAgIDxJbnB1dCB7IC4uLnByb3BzIH1cbiAgICAgICAgICByZWY9J2lucHV0J1xuICAgICAgICAgIHZhbHVlPXsgc2VhcmNoVGV4dCB9XG4gICAgICAgICAgb25LZXlEb3duPXsgdGhpcy5vbklucHV0S2V5RG93bi5iaW5kKHRoaXMpIH1cbiAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25JbnB1dENoYW5nZS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICBvbkJsdXI9eyB0aGlzLm9uSW5wdXRCbHVyLmJpbmQodGhpcykgfVxuICAgICAgICAvPlxuICAgICAgICA8SWNvbiBpY29uPSdzZWFyY2gnIGNsYXNzTmFtZT0nc2xkcy1pbnB1dF9faWNvbicgc3R5bGU9eyB7IGN1cnNvcjogJ3BvaW50ZXInIH0gfVxuICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLm9uTG9va3VwSWNvbkNsaWNrLmJpbmQodGhpcykgfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG59XG5cblxuTG9va3VwU2VhcmNoLnByb3BUeXBlcyA9IHtcbiAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2VhcmNoVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICBvblByZXNzRG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU3VibWl0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Db21wbGV0ZTogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG4vKipcbiAqXG4gKi9cbmNsYXNzIExvb2t1cENhbmRpZGF0ZUxpc3QgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLmZvY3VzKSB7XG4gICAgICB0aGlzLmZvY3VzVG9UYXJnZXRJdGVtRWwoMCk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLmZvY3VzICYmICFwcmV2UHJvcHMuZm9jdXMpIHtcbiAgICAgIHRoaXMuZm9jdXNUb1RhcmdldEl0ZW1FbCgwKTtcbiAgICB9XG4gIH1cblxuICBvblNlbGVjdChlbnRyeSkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uU2VsZWN0KSB7XG4gICAgICB0aGlzLnByb3BzLm9uU2VsZWN0KGVudHJ5KTtcbiAgICB9XG4gIH1cblxuICBvbktleURvd24oZSkge1xuICAgIGlmIChlLmtleUNvZGUgPT09IDM4IHx8IGUua2V5Q29kZSA9PT0gNDApIHsgLy8gVVAvRE9XTlxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRFbCA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQ7XG4gICAgICBsZXQgaXRlbUVsID0gZS5rZXlDb2RlID09PSA0MCA/IGN1cnJlbnRFbC5uZXh0U2libGluZyA6IGN1cnJlbnRFbC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICB3aGlsZSAoaXRlbUVsKSB7XG4gICAgICAgIGNvbnN0IGFuY2hvckVsID0gaXRlbUVsLnF1ZXJ5U2VsZWN0b3IoJy5yZWFjdC1zbGRzLWNhbmRpZGF0ZVt0YWJJbmRleF0nKTtcbiAgICAgICAgaWYgKGFuY2hvckVsICYmICFhbmNob3JFbC5kaXNhYmxlZCkge1xuICAgICAgICAgIGFuY2hvckVsLmZvY3VzKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGl0ZW1FbCA9IGUua2V5Q29kZSA9PT0gNDAgPyBpdGVtRWwubmV4dFNpYmxpbmcgOiBpdGVtRWwucHJldmlvdXNTaWJsaW5nO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSAyNykgeyAvLyBFU0NcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB0aGlzLm9uU2VsZWN0KG51bGwpO1xuICAgIH1cbiAgfVxuXG4gIGZvY3VzVG9UYXJnZXRJdGVtRWwoaW5kZXgpIHtcbiAgICBjb25zdCBlbCA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpO1xuICAgIGNvbnN0IGFuY2hvcnMgPSBlbC5xdWVyeVNlbGVjdG9yQWxsKCcucmVhY3Qtc2xkcy1jYW5kaWRhdGVbdGFiSW5kZXhdJyk7XG4gICAgaWYgKGFuY2hvcnNbaW5kZXhdKSB7XG4gICAgICBhbmNob3JzW2luZGV4XS5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlckNhbmRpZGF0ZShlbnRyeSkge1xuICAgIHJldHVybiAoXG4gICAgICA8bGkgY2xhc3NOYW1lPSdzbGRzLWxvb2t1cF9faXRlbScga2V5PXsgZW50cnkudmFsdWUgfT5cbiAgICAgICAgPGEgY2xhc3NOYW1lPSdzbGRzLXRydW5jYXRlIHJlYWN0LXNsZHMtY2FuZGlkYXRlJyB0YWJJbmRleD17IC0xIH0gcm9sZT0nb3B0aW9uJ1xuICAgICAgICAgIG9uS2V5RG93bj17IChlKSA9PiBlLmtleUNvZGUgPT09IDEzICYmIHRoaXMub25TZWxlY3QoZW50cnkpIH1cbiAgICAgICAgICBvbkJsdXI9eyB0aGlzLnByb3BzLm9uQmx1ciB9XG4gICAgICAgICAgb25DbGljaz17ICgpID0+IHRoaXMub25TZWxlY3QoZW50cnkpIH1cbiAgICAgICAgPlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGVudHJ5Lmljb24gP1xuICAgICAgICAgICAgPEljb24gY2F0ZWdvcnk9eyBlbnRyeS5jYXRlZ29yeSB9IGljb249eyBlbnRyeS5pY29uIH0gc2l6ZT0nc21hbGwnIC8+IDpcbiAgICAgICAgICAgIHVuZGVmaW5lZFxuICAgICAgICAgIH1cbiAgICAgICAgICB7IGVudHJ5LmxhYmVsIH1cbiAgICAgICAgPC9hPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZGF0YSA9IFtdLCBoaWRkZW4sIGxvYWRpbmcsIGhlYWRlciwgZm9vdGVyLCBmaWx0ZXIgPSAoKSA9PiB0cnVlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGxvb2t1cE1lbnVDbGFzc05hbWVzID0gY2xhc3NuYW1lcyhcbiAgICAgICdzbGRzLWxvb2t1cF9fbWVudScsXG4gICAgICB7ICdzbGRzLWhpZGUnOiBoaWRkZW4gfVxuICAgICk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsgbG9va3VwTWVudUNsYXNzTmFtZXMgfSByb2xlPSdsaXN0Ym94J1xuICAgICAgICBvbktleURvd249eyB0aGlzLm9uS2V5RG93bi5iaW5kKHRoaXMpIH1cbiAgICAgID5cbiAgICAgICAge1xuICAgICAgICAgIGhlYWRlciA/XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NsZHMtbG9va3VwX19pdGVtJz57IGhlYWRlciB9PC9kaXY+IDpcbiAgICAgICAgICB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgICAgICA8dWwgY2xhc3NOYW1lPSdzbGRzLWxvb2t1cF9fbGlzdCcgcm9sZT0ncHJlc2VudGF0aW9uJz5cbiAgICAgICAgICB7XG4gICAgICAgICAgICBkYXRhLmZpbHRlcihmaWx0ZXIpLm1hcCh0aGlzLnJlbmRlckNhbmRpZGF0ZS5iaW5kKHRoaXMpKVxuICAgICAgICAgIH1cbiAgICAgICAgICB7XG4gICAgICAgICAgICBsb2FkaW5nID9cbiAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9J3NsZHMtbG9va3VwX19pdGVtJyBrZXk9J2xvYWRpbmcnPlxuICAgICAgICAgICAgICA8U3Bpbm5lciBzaXplPSdzbWFsbCcgc3R5bGU9eyB7IG1hcmdpbjogJzAgYXV0bycgfSB9IC8+XG4gICAgICAgICAgICA8L2xpPiA6XG4gICAgICAgICAgICB1bmRlZmluZWRcbiAgICAgICAgICB9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIHtcbiAgICAgICAgICBmb290ZXIgP1xuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzbGRzLWxvb2t1cF9faXRlbSc+eyBmb290ZXIgfTwvZGl2PiA6XG4gICAgICAgICAgdW5kZWZpbmVkXG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxufVxuXG5Mb29rdXBDYW5kaWRhdGVMaXN0LnByb3BUeXBlcyA9IHtcbiAgZGF0YTogUHJvcFR5cGVzLmFycmF5T2YoTG9va3VwRW50cnlUeXBlKSxcbiAgZm9jdXM6IFByb3BUeXBlcy5ib29sLFxuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgZmlsdGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICBvbkJsdXI6IFByb3BUeXBlcy5mdW5jLFxuICBoZWFkZXI6IFByb3BUeXBlcy5ub2RlLFxuICBmb290ZXI6IFByb3BUeXBlcy5ub2RlLFxufTtcblxuXG4vKipcbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb2t1cCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzZWxlY3RlZDogcHJvcHMuZGVmYXVsdFNlbGVjdGVkLFxuICAgICAgb3BlbmVkOiBwcm9wcy5kZWZhdWx0T3BlbmVkLFxuICAgICAgc2VhcmNoVGV4dDogcHJvcHMuZGVmYXVsdFNlYXJjaFRleHQsXG4gICAgICBmb2N1c0ZpcnN0Q2FuZGlkYXRlOiBmYWxzZSxcbiAgICB9O1xuICB9XG5cbiAgb25TZWFyY2hUZXh0Q2hhbmdlKHNlYXJjaFRleHQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2VhcmNoVGV4dCB9KTtcbiAgICBpZiAodGhpcy5wcm9wcy5vblNlYXJjaFRleHRDaGFuZ2UpIHtcbiAgICAgIHRoaXMucHJvcHMub25TZWFyY2hUZXh0Q2hhbmdlKHNlYXJjaFRleHQpO1xuICAgIH1cbiAgfVxuXG4gIG9uTG9va3VwUmVxdWVzdChzZWFyY2hUZXh0KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG9wZW5lZDogdHJ1ZSB9KTtcbiAgICBpZiAodGhpcy5wcm9wcy5vbkxvb2t1cFJlcXVlc3QpIHtcbiAgICAgIHRoaXMucHJvcHMub25Mb29rdXBSZXF1ZXN0KHNlYXJjaFRleHQpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ29tcGxldGUoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Db21wbGV0ZSkge1xuICAgICAgdGhpcy5wcm9wcy5vbkNvbXBsZXRlKCk7XG4gICAgfVxuICB9XG5cbiAgb25SZXNldFNlbGVjdGlvbigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2VsZWN0ZWQ6IG51bGwgfSk7XG4gICAgaWYgKHRoaXMucHJvcHMub25TZWxlY3QpIHtcbiAgICAgIHRoaXMucHJvcHMub25TZWxlY3QobnVsbCk7XG4gICAgfVxuICAgIHRoaXMub25TZWFyY2hUZXh0Q2hhbmdlKCcnKTtcbiAgICB0aGlzLm9uTG9va3VwUmVxdWVzdCgnJyk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCBzZWFyY2hFbGVtID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcy5yZWZzLnNlYXJjaCk7XG4gICAgICBjb25zdCBpbnB1dEVsZW0gPSBzZWFyY2hFbGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgICBpbnB1dEVsZW0uZm9jdXMoKTtcbiAgICB9LCAxMCk7XG4gIH1cblxuICBvbkxvb2t1cEl0ZW1TZWxlY3Qoc2VsZWN0ZWQpIHtcbiAgICBpZiAoc2VsZWN0ZWQpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3RlZCwgb3BlbmVkOiBmYWxzZSB9KTtcbiAgICAgIGlmICh0aGlzLnByb3BzLm9uU2VsZWN0KSB7XG4gICAgICAgIHRoaXMucHJvcHMub25TZWxlY3Qoc2VsZWN0ZWQpO1xuICAgICAgfVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGlvbkVsZW0gPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzLnJlZnMuc2VsZWN0aW9uKTtcbiAgICAgICAgY29uc3QgcGlsbEVsZW0gPSBzZWxlY3Rpb25FbGVtLnF1ZXJ5U2VsZWN0b3IoJ2EnKTtcbiAgICAgICAgaWYgKHBpbGxFbGVtKSB7IHBpbGxFbGVtLmZvY3VzKCk7IH1cbiAgICAgIH0sIDEwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IG9wZW5lZDogZmFsc2UgfSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29uc3Qgc2VhcmNoRWxlbSA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMucmVmcy5zZWFyY2gpO1xuICAgICAgICBjb25zdCBpbnB1dEVsZW0gPSBzZWFyY2hFbGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgICAgIGlucHV0RWxlbS5mb2N1cygpO1xuICAgICAgfSwgMTApO1xuICAgIH1cbiAgICBpZiAodGhpcy5wcm9wcy5vbkNvbXBsZXRlKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ29tcGxldGUoKTtcbiAgICB9XG4gIH1cblxuICBvbkZvY3VzRmlyc3RDYW5kaWRhdGUoKSB7XG4gICAgY29uc3QgeyBvcGVuZWQgPSB0aGlzLnN0YXRlLm9wZW5lZCB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoIW9wZW5lZCkge1xuICAgICAgdGhpcy5vbkxvb2t1cFJlcXVlc3QodGhpcy5zdGF0ZS5zZWFyY2hUZXh0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGZvY3VzRmlyc3RDYW5kaWRhdGU6IHRydWUgfSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGZvY3VzRmlyc3RDYW5kaWRhdGU6IGZhbHNlIH0pO1xuICAgICAgfSwgMTApO1xuICAgIH1cbiAgfVxuXG4gIG9uQmx1cigpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghdGhpcy5pc0ZvY3VzZWRJbkNvbXBvbmVudCgpKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBvcGVuZWQ6IGZhbHNlIH0pO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbkJsdXIpIHtcbiAgICAgICAgICB0aGlzLnByb3BzLm9uQmx1cigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uQ29tcGxldGUpIHtcbiAgICAgICAgICB0aGlzLnByb3BzLm9uQ29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIDEwKTtcbiAgfVxuXG4gIGlzRm9jdXNlZEluQ29tcG9uZW50KCkge1xuICAgIGNvbnN0IHJvb3RFbCA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpO1xuICAgIGxldCB0YXJnZXRFbCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG4gICAgd2hpbGUgKHRhcmdldEVsICYmIHRhcmdldEVsICE9PSByb290RWwpIHtcbiAgICAgIHRhcmdldEVsID0gdGFyZ2V0RWwucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuICEhdGFyZ2V0RWw7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgdG90YWxDb2xzLCBjb2xzLCBsYWJlbCxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIHNlbGVjdGVkID0gdGhpcy5zdGF0ZS5zZWxlY3RlZCwgZGVmYXVsdFNlbGVjdGVkLFxuICAgICAgb3BlbmVkID0gdGhpcy5zdGF0ZS5vcGVuZWQsIGRlZmF1bHRPcGVuZWQsXG4gICAgICBzZWFyY2hUZXh0ID0gdGhpcy5zdGF0ZS5zZWFyY2hUZXh0LCBkZWZhdWx0U2VhcmNoVGV4dCxcbiAgICAgIGxvYWRpbmcsIGxvb2t1cEZpbHRlcixcbiAgICAgIGxpc3RIZWFkZXIsIGxpc3RGb290ZXIsXG4gICAgICBkYXRhLCAuLi5wcm9wcyxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBkcm9wZG93biA9IChcbiAgICAgIDxMb29rdXBDYW5kaWRhdGVMaXN0XG4gICAgICAgIHJlZj0nY2FuZGlkYXRlTGlzdCdcbiAgICAgICAgZGF0YT17IGRhdGEgfVxuICAgICAgICBmb2N1cz17IHRoaXMuc3RhdGUuZm9jdXNGaXJzdENhbmRpZGF0ZSB9XG4gICAgICAgIGhpZGRlbj17ICFvcGVuZWQgfVxuICAgICAgICBsb2FkaW5nPXsgbG9hZGluZyB9XG4gICAgICAgIGZpbHRlcj17IGxvb2t1cEZpbHRlciA/IChlbnRyeSkgPT4gbG9va3VwRmlsdGVyKGVudHJ5LCBzZWFyY2hUZXh0KSA6IHVuZGVmaW5lZCB9XG4gICAgICAgIGhlYWRlcj17IGxpc3RIZWFkZXIgfVxuICAgICAgICBmb290ZXI9eyBsaXN0Rm9vdGVyIH1cbiAgICAgICAgb25TZWxlY3Q9eyB0aGlzLm9uTG9va3VwSXRlbVNlbGVjdC5iaW5kKHRoaXMpIH1cbiAgICAgICAgb25CbHVyPXsgdGhpcy5vbkJsdXIuYmluZCh0aGlzKSB9XG4gICAgICAvPlxuICAgICk7XG4gICAgY29uc3QgZm9ybUVsZW1Qcm9wcyA9IHsgaWQ6IHByb3BzLmlkLCB0b3RhbENvbHMsIGNvbHMsIGxhYmVsLCBkcm9wZG93biB9O1xuICAgIHJldHVybiAoXG4gICAgICA8Rm9ybUVsZW1lbnQgeyAuLi5mb3JtRWxlbVByb3BzIH0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgY2xhc3NOYW1lIH0+XG4gICAgICAgICAgPExvb2t1cFNlbGVjdGlvblxuICAgICAgICAgICAgcmVmPSdzZWxlY3Rpb24nXG4gICAgICAgICAgICBzZWxlY3RlZD17IHNlbGVjdGVkIH1cbiAgICAgICAgICAgIGhpZGRlbj17ICFzZWxlY3RlZCB9XG4gICAgICAgICAgICBvblJlc2V0U2VsZWN0aW9uPXsgdGhpcy5vblJlc2V0U2VsZWN0aW9uLmJpbmQodGhpcykgfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPExvb2t1cFNlYXJjaCB7IC4uLnByb3BzIH1cbiAgICAgICAgICAgIHJlZj0nc2VhcmNoJ1xuICAgICAgICAgICAgaGlkZGVuPXsgISFzZWxlY3RlZCB9XG4gICAgICAgICAgICBzZWFyY2hUZXh0PXsgc2VhcmNoVGV4dCB9XG4gICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25TZWFyY2hUZXh0Q2hhbmdlLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgb25TdWJtaXQ9eyAoKSA9PiB0aGlzLm9uTG9va3VwUmVxdWVzdChzZWFyY2hUZXh0KSB9XG4gICAgICAgICAgICBvblByZXNzRG93bj17IHRoaXMub25Gb2N1c0ZpcnN0Q2FuZGlkYXRlLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgb25Db21wbGV0ZT17IHRoaXMub25Db21wbGV0ZS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgIG9uQmx1cj17IHRoaXMub25CbHVyLmJpbmQodGhpcykgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Gb3JtRWxlbWVudD5cbiAgICApO1xuICB9XG59XG5cblxuTG9va3VwLnByb3BUeXBlcyA9IHtcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGRlZmF1bHRWYWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2VsZWN0ZWQ6IExvb2t1cEVudHJ5VHlwZSxcbiAgZGVmYXVsdFNlbGVjdGVkOiBMb29rdXBFbnRyeVR5cGUsXG4gIG9wZW5lZDogUHJvcFR5cGVzLmJvb2wsXG4gIGRlZmF1bHRPcGVuZWQ6IFByb3BUeXBlcy5ib29sLFxuICBzZWFyY2hUZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkZWZhdWx0U2VhcmNoVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGRhdGE6IFByb3BUeXBlcy5hcnJheU9mKExvb2t1cEVudHJ5VHlwZSksXG4gIGxvb2t1cEZpbHRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGxpc3RIZWFkZXI6IFByb3BUeXBlcy5ub2RlLFxuICBsaXN0Rm9vdGVyOiBQcm9wVHlwZXMubm9kZSxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWFyY2hUZXh0Q2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Mb29rdXBSZXF1ZXN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNvbXBsZXRlOiBQcm9wVHlwZXMuZnVuYyxcbiAgdG90YWxDb2xzOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjb2xzOiBQcm9wVHlwZXMubnVtYmVyLFxufTtcblxuTG9va3VwLmlzRm9ybUVsZW1lbnQgPSB0cnVlO1xuIl19